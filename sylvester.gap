RequirePackage("grape");

Sylvester := rec(
  isGraph := true,
  order := 36,
  group := Group( [ ( 2, 7)( 3,13)( 4,19)( 5,25)( 6,31)( 9,14)(10,20)(11,26)(12,32)(16,21)(17,27)(18,33)(23,28)(24,34)(30,35), 
      ( 3, 4)( 5, 6)( 9,10)(11,12)(13,19)(14,20)(15,22)(16,21)(17,24)(18,23)(25,31)(26,32)(27,34)(28,33)(29,36)(30,35), 
      ( 3, 5, 4, 6)( 9,11,10,12)(13,25,19,31)(14,26,20,32)(15,29,22,36)(16,30,21,35)(17,28,24,33)(18,27,23,34), ( 2, 3)( 4, 6)( 7,13)( 8,15)( 9,14)(10,18)
        (11,17)(12,16)(19,31)(20,33)(21,32)(22,36)(23,35)(24,34)(26,27)(28,30), ( 1, 2)( 3, 6)( 4, 5)( 7, 8)( 9,12)(10,11)(13,14)(15,18)(16,17)(19,20)(21,24)
        (22,23)(25,32)(26,31)(27,36)(28,35)(29,34)(30,33) ] ),
  schreierVector := [ -1, 5, 4, 2, 3, 5, 1, 5, 1, 1, 3, 1, 4, 5, 4, 4, 3, 5, 2, 5, 4, 2, 5, 5, 3, 3, 4, 2, 3, 5, 1, 5, 4, 5, 3, 3 ],
  adjacencies := [ [ 8, 15, 22, 29, 36 ] ],
  representatives := [ 1 ],
  isSimple := true );
  
H := [ [ 1, 2, 3, 4, 5, 6 ], [ 7, 8, 9, 10, 11, 12 ], [ 13, 14, 15, 16, 17, 18 ], [ 19, 20, 21, 22, 23, 24 ], [ 25, 26, 27, 28, 29, 30 ], [ 31, 32, 33, 34, 35, 36 ] ];
V := [ [ 1, 7, 13, 19, 25, 31 ], [ 2, 8, 14, 20, 26, 32 ], [ 3, 9, 15, 21, 27, 33 ], [ 4, 10, 16, 22, 28, 34 ], [ 5, 11, 17, 23, 29, 35 ], [ 6, 12, 18, 24, 30, 36 ] ];
HS := Graph(Group(()), [1..50], function(x,y) return x; end,
    function(x,y)
        if x > y then
            x := x+y;
            y := x-y;
            x := x-y;
        fi;
        if x <= 36 then
            if y <= 36 then
                return Distance(Sylvester, x, y) = 1;
            elif y <= 42 then
                return x in H[((y-1) mod 6) + 1];
            elif y <= 48 then
                return x in V[((y-1) mod 6) + 1];
            else
                return x = 49 and y = 50;
            fi;
        elif x <= 42 then
            return y = 49;
        elif x <= 49 then
            return y = 50;
        fi;
        return false;
    end, true);